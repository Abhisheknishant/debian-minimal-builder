#!/usr/bin/env python3
#
# Reading the correct files from the configured search path, construct
# the multistrap config file that we will actually use
#
# TODO:
# - possibly use a template language to interpret the --template file
# - load lines formatted like apt.sources to construct the multistrap source

import argparse
import jinja2


def argsparser():
    parser = argparse.ArgumentParser(
            description='Create the multistrap conf')
    parser.add_argument('--packagefile', nargs='+',
                        help='Add the packages listed in this file')
    parser.add_argument('--template', required=True,
                        help='The template multistrap conf to use')
    parser.add_argument('--output', required=True,
                        help='Name of the output file')

    return parser.parse_args()


def read_packages(files):
    """Read lists of package names from each of the given files"""

    packages = dict()

    for file in files:
        input = open(file, 'r')

        for line in input:
            line = line.strip()
            if not line:
                continue
            if line.startswith('#'):
                continue
            packages[line] = 1

    return list(packages.keys())


def main():
    args = argsparser()

    packages = list()

    if args.packagefile:
        packages = read_packages(args.packagefile)

    env = jinja2.Environment(
            # TODO
            # - use config search path from Makefile
            loader=jinja2.FileSystemLoader('.')
    )
    template = env.get_template(args.template)

    output = open(args.output, 'w')

    print(template.render(), file=output)

    if packages:
        print(file=output)
        print("packages=", ' '.join(packages), file=output)


if __name__ == '__main__':
    main()
